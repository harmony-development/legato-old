// Code generated by sqlc. DO NOT EDIT.
// source: sessions.sql

package gen

import (
	"context"
)

const addSession = `-- name: AddSession :exec
INSERT INTO AuthSessions(UserID, SessionID) VALUES($1, $2)
`

type AddSessionParams struct {
	Userid    int64
	Sessionid string
}

func (q *Queries) AddSession(ctx context.Context, arg AddSessionParams) error {
	_, err := q.db.Exec(ctx, addSession, arg.Userid, arg.Sessionid)
	return err
}

const deleteSession = `-- name: DeleteSession :exec
DELETE FROM AuthSessions WHERE SessionID = $1
`

func (q *Queries) DeleteSession(ctx context.Context, sessionid string) error {
	_, err := q.db.Exec(ctx, deleteSession, sessionid)
	return err
}

const getSession = `-- name: GetSession :one

SELECT UserID FROM AuthSessions WHERE SessionID = $1
`

// SPDX-FileCopyrightText: 2021 Danil Korennykh <bluskript@gmail.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

func (q *Queries) GetSession(ctx context.Context, sessionid string) (int64, error) {
	row := q.db.QueryRow(ctx, getSession, sessionid)
	var userid int64
	err := row.Scan(&userid)
	return userid, err
}
