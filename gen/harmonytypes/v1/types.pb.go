// SPDX-FileCopyrightText: 2021 None
//
// SPDX-License-Identifier: CC0-1.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: harmonytypes/v1/types.proto

package harmonytypesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The kind of colour modification to apply
type Format_Color_Kind int32

const (
	// Dimmed colour
	Format_Color_KIND_DIM_UNSPECIFIED Format_Color_Kind = 0
	// Brightened colour
	Format_Color_KIND_BRIGHT Format_Color_Kind = 1
	// Negative colour (usually red)
	Format_Color_KIND_NEGATIVE Format_Color_Kind = 2
	// Positive colour (usually green)
	Format_Color_KIND_POSITIVE Format_Color_Kind = 3
	// Informational colour (usually blue)
	Format_Color_KIND_INFO Format_Color_Kind = 4
	// Warning colour (usually yellow-orange)
	Format_Color_KIND_WARNING Format_Color_Kind = 5
)

// Enum value maps for Format_Color_Kind.
var (
	Format_Color_Kind_name = map[int32]string{
		0: "KIND_DIM_UNSPECIFIED",
		1: "KIND_BRIGHT",
		2: "KIND_NEGATIVE",
		3: "KIND_POSITIVE",
		4: "KIND_INFO",
		5: "KIND_WARNING",
	}
	Format_Color_Kind_value = map[string]int32{
		"KIND_DIM_UNSPECIFIED": 0,
		"KIND_BRIGHT":          1,
		"KIND_NEGATIVE":        2,
		"KIND_POSITIVE":        3,
		"KIND_INFO":            4,
		"KIND_WARNING":         5,
	}
)

func (x Format_Color_Kind) Enum() *Format_Color_Kind {
	p := new(Format_Color_Kind)
	*p = x
	return p
}

func (x Format_Color_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format_Color_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_harmonytypes_v1_types_proto_enumTypes[0].Descriptor()
}

func (Format_Color_Kind) Type() protoreflect.EnumType {
	return &file_harmonytypes_v1_types_proto_enumTypes[0]
}

func (x Format_Color_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format_Color_Kind.Descriptor instead.
func (Format_Color_Kind) EnumDescriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 12, 0}
}

// Metadata for methods. These are set in individual RPC endpoints and are
// typically used by servers.
type HarmonyMethodMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whether the method requires authentication.
	RequiresAuthentication bool `protobuf:"varint,1,opt,name=requires_authentication,json=requiresAuthentication,proto3" json:"requires_authentication,omitempty"`
	// whether the method allows federation or not.
	RequiresLocal bool `protobuf:"varint,2,opt,name=requires_local,json=requiresLocal,proto3" json:"requires_local,omitempty"`
	// the permission nodes required to invoke the method.
	RequiresPermissionNode string `protobuf:"bytes,3,opt,name=requires_permission_node,json=requiresPermissionNode,proto3" json:"requires_permission_node,omitempty"`
}

func (x *HarmonyMethodMetadata) Reset() {
	*x = HarmonyMethodMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarmonyMethodMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarmonyMethodMetadata) ProtoMessage() {}

func (x *HarmonyMethodMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarmonyMethodMetadata.ProtoReflect.Descriptor instead.
func (*HarmonyMethodMetadata) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *HarmonyMethodMetadata) GetRequiresAuthentication() bool {
	if x != nil {
		return x.RequiresAuthentication
	}
	return false
}

func (x *HarmonyMethodMetadata) GetRequiresLocal() bool {
	if x != nil {
		return x.RequiresLocal
	}
	return false
}

func (x *HarmonyMethodMetadata) GetRequiresPermissionNode() string {
	if x != nil {
		return x.RequiresPermissionNode
	}
	return ""
}

// Metadata type used by many messages.
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kind of this metadata.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// A map containing information.
	Extension map[string]*anypb.Any `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Metadata) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Metadata) GetExtension() map[string]*anypb.Any {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Error type that will be returned by servers.
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of this error, can be used as an i18n key.
	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// A (usually english) human message for this error.
	HumanMessage string `protobuf:"bytes,2,opt,name=human_message,json=humanMessage,proto3" json:"human_message,omitempty"`
	// More details about this message. Is dependent on the endpoint.
	MoreDetails []byte `protobuf:"bytes,3,opt,name=more_details,json=moreDetails,proto3" json:"more_details,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Error) GetHumanMessage() string {
	if x != nil {
		return x.HumanMessage
	}
	return ""
}

func (x *Error) GetMoreDetails() []byte {
	if x != nil {
		return x.MoreDetails
	}
	return nil
}

// Token that will be used for authentication.
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ed25519 signature of the following serialized protobuf data, signed
	// with a private key. Which private key used to sign will be described
	// in the documentation.
	//
	// Has to be 64 bytes long, otherwise it will be rejected.
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	// Serialized protobuf data.
	// The protobuf type of this serialized data is dependent on the API endpoint
	// used.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Token) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *Token) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// A format for text
type Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// where the format begins to apply to
	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// how many characters the format is
	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// the style if format to apply to this text
	//
	// Types that are assignable to Format:
	//	*Format_Bold_
	//	*Format_Italic_
	//	*Format_Underline_
	//	*Format_Monospace_
	//	*Format_Superscript_
	//	*Format_Subscript_
	//	*Format_CodeBlock_
	//	*Format_UserMention_
	//	*Format_RoleMention_
	//	*Format_ChannelMention_
	//	*Format_GuildMention_
	//	*Format_Emoji_
	//	*Format_Color_
	Format isFormat_Format `protobuf_oneof:"format"`
}

func (x *Format) Reset() {
	*x = Format{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format) ProtoMessage() {}

func (x *Format) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format.ProtoReflect.Descriptor instead.
func (*Format) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Format) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Format) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (m *Format) GetFormat() isFormat_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (x *Format) GetBold() *Format_Bold {
	if x, ok := x.GetFormat().(*Format_Bold_); ok {
		return x.Bold
	}
	return nil
}

func (x *Format) GetItalic() *Format_Italic {
	if x, ok := x.GetFormat().(*Format_Italic_); ok {
		return x.Italic
	}
	return nil
}

func (x *Format) GetUnderline() *Format_Underline {
	if x, ok := x.GetFormat().(*Format_Underline_); ok {
		return x.Underline
	}
	return nil
}

func (x *Format) GetMonospace() *Format_Monospace {
	if x, ok := x.GetFormat().(*Format_Monospace_); ok {
		return x.Monospace
	}
	return nil
}

func (x *Format) GetSuperscript() *Format_Superscript {
	if x, ok := x.GetFormat().(*Format_Superscript_); ok {
		return x.Superscript
	}
	return nil
}

func (x *Format) GetSubscript() *Format_Subscript {
	if x, ok := x.GetFormat().(*Format_Subscript_); ok {
		return x.Subscript
	}
	return nil
}

func (x *Format) GetCodeBlock() *Format_CodeBlock {
	if x, ok := x.GetFormat().(*Format_CodeBlock_); ok {
		return x.CodeBlock
	}
	return nil
}

func (x *Format) GetUserMention() *Format_UserMention {
	if x, ok := x.GetFormat().(*Format_UserMention_); ok {
		return x.UserMention
	}
	return nil
}

func (x *Format) GetRoleMention() *Format_RoleMention {
	if x, ok := x.GetFormat().(*Format_RoleMention_); ok {
		return x.RoleMention
	}
	return nil
}

func (x *Format) GetChannelMention() *Format_ChannelMention {
	if x, ok := x.GetFormat().(*Format_ChannelMention_); ok {
		return x.ChannelMention
	}
	return nil
}

func (x *Format) GetGuildMention() *Format_GuildMention {
	if x, ok := x.GetFormat().(*Format_GuildMention_); ok {
		return x.GuildMention
	}
	return nil
}

func (x *Format) GetEmoji() *Format_Emoji {
	if x, ok := x.GetFormat().(*Format_Emoji_); ok {
		return x.Emoji
	}
	return nil
}

func (x *Format) GetColor() *Format_Color {
	if x, ok := x.GetFormat().(*Format_Color_); ok {
		return x.Color
	}
	return nil
}

type isFormat_Format interface {
	isFormat_Format()
}

type Format_Bold_ struct {
	// a text format for bold text
	Bold *Format_Bold `protobuf:"bytes,3,opt,name=bold,proto3,oneof"`
}

type Format_Italic_ struct {
	// a text format for italic text
	Italic *Format_Italic `protobuf:"bytes,4,opt,name=italic,proto3,oneof"`
}

type Format_Underline_ struct {
	// a text format for underline text
	Underline *Format_Underline `protobuf:"bytes,5,opt,name=underline,proto3,oneof"`
}

type Format_Monospace_ struct {
	// a text format for monospace text
	Monospace *Format_Monospace `protobuf:"bytes,6,opt,name=monospace,proto3,oneof"`
}

type Format_Superscript_ struct {
	// a text format for superscript text
	Superscript *Format_Superscript `protobuf:"bytes,7,opt,name=superscript,proto3,oneof"`
}

type Format_Subscript_ struct {
	// a text format for subscript text
	Subscript *Format_Subscript `protobuf:"bytes,8,opt,name=subscript,proto3,oneof"`
}

type Format_CodeBlock_ struct {
	// a text format for a codeblock
	CodeBlock *Format_CodeBlock `protobuf:"bytes,9,opt,name=code_block,json=codeBlock,proto3,oneof"`
}

type Format_UserMention_ struct {
	// a text format for a user mention
	UserMention *Format_UserMention `protobuf:"bytes,10,opt,name=user_mention,json=userMention,proto3,oneof"`
}

type Format_RoleMention_ struct {
	// a text format for a role mention
	RoleMention *Format_RoleMention `protobuf:"bytes,11,opt,name=role_mention,json=roleMention,proto3,oneof"`
}

type Format_ChannelMention_ struct {
	// a text format for a channel mention
	ChannelMention *Format_ChannelMention `protobuf:"bytes,12,opt,name=channel_mention,json=channelMention,proto3,oneof"`
}

type Format_GuildMention_ struct {
	// a text format for a guild mention
	GuildMention *Format_GuildMention `protobuf:"bytes,13,opt,name=guild_mention,json=guildMention,proto3,oneof"`
}

type Format_Emoji_ struct {
	// a text format for an emoji
	Emoji *Format_Emoji `protobuf:"bytes,14,opt,name=emoji,proto3,oneof"`
}

type Format_Color_ struct {
	// a text format for coloured text
	Color *Format_Color `protobuf:"bytes,16,opt,name=color,proto3,oneof"`
}

func (*Format_Bold_) isFormat_Format() {}

func (*Format_Italic_) isFormat_Format() {}

func (*Format_Underline_) isFormat_Format() {}

func (*Format_Monospace_) isFormat_Format() {}

func (*Format_Superscript_) isFormat_Format() {}

func (*Format_Subscript_) isFormat_Format() {}

func (*Format_CodeBlock_) isFormat_Format() {}

func (*Format_UserMention_) isFormat_Format() {}

func (*Format_RoleMention_) isFormat_Format() {}

func (*Format_ChannelMention_) isFormat_Format() {}

func (*Format_GuildMention_) isFormat_Format() {}

func (*Format_Emoji_) isFormat_Format() {}

func (*Format_Color_) isFormat_Format() {}

// Formatted text
type FormattedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The textual content of a message
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// The formats for a message
	Format []*Format `protobuf:"bytes,2,rep,name=format,proto3" json:"format,omitempty"`
}

func (x *FormattedText) Reset() {
	*x = FormattedText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormattedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormattedText) ProtoMessage() {}

func (x *FormattedText) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormattedText.ProtoReflect.Descriptor instead.
func (*FormattedText) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *FormattedText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FormattedText) GetFormat() []*Format {
	if x != nil {
		return x.Format
	}
	return nil
}

// An object representing an item position between two other items.
type ItemPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Position of this item.
	//
	// Types that are assignable to Position:
	//	*ItemPosition_Top_
	//	*ItemPosition_Between_
	//	*ItemPosition_Bottom_
	Position isItemPosition_Position `protobuf_oneof:"position"`
}

func (x *ItemPosition) Reset() {
	*x = ItemPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPosition) ProtoMessage() {}

func (x *ItemPosition) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPosition.ProtoReflect.Descriptor instead.
func (*ItemPosition) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{6}
}

func (m *ItemPosition) GetPosition() isItemPosition_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (x *ItemPosition) GetTop() *ItemPosition_Top {
	if x, ok := x.GetPosition().(*ItemPosition_Top_); ok {
		return x.Top
	}
	return nil
}

func (x *ItemPosition) GetBetween() *ItemPosition_Between {
	if x, ok := x.GetPosition().(*ItemPosition_Between_); ok {
		return x.Between
	}
	return nil
}

func (x *ItemPosition) GetBottom() *ItemPosition_Bottom {
	if x, ok := x.GetPosition().(*ItemPosition_Bottom_); ok {
		return x.Bottom
	}
	return nil
}

type isItemPosition_Position interface {
	isItemPosition_Position()
}

type ItemPosition_Top_ struct {
	// The item is at the top.
	Top *ItemPosition_Top `protobuf:"bytes,1,opt,name=top,proto3,oneof"`
}

type ItemPosition_Between_ struct {
	// The item is in between two other items.
	Between *ItemPosition_Between `protobuf:"bytes,2,opt,name=between,proto3,oneof"`
}

type ItemPosition_Bottom_ struct {
	// The item is at the bottom.
	Bottom *ItemPosition_Bottom `protobuf:"bytes,3,opt,name=bottom,proto3,oneof"`
}

func (*ItemPosition_Top_) isItemPosition_Position() {}

func (*ItemPosition_Between_) isItemPosition_Position() {}

func (*ItemPosition_Bottom_) isItemPosition_Position() {}

// Bold text
type Format_Bold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Bold) Reset() {
	*x = Format_Bold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Bold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Bold) ProtoMessage() {}

func (x *Format_Bold) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Bold.ProtoReflect.Descriptor instead.
func (*Format_Bold) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 0}
}

// Italic text
type Format_Italic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Italic) Reset() {
	*x = Format_Italic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Italic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Italic) ProtoMessage() {}

func (x *Format_Italic) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Italic.ProtoReflect.Descriptor instead.
func (*Format_Italic) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 1}
}

// Underlined text
type Format_Underline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Underline) Reset() {
	*x = Format_Underline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Underline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Underline) ProtoMessage() {}

func (x *Format_Underline) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Underline.ProtoReflect.Descriptor instead.
func (*Format_Underline) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 2}
}

// Monospace text
type Format_Monospace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Monospace) Reset() {
	*x = Format_Monospace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Monospace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Monospace) ProtoMessage() {}

func (x *Format_Monospace) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Monospace.ProtoReflect.Descriptor instead.
func (*Format_Monospace) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 3}
}

// Superscript text
type Format_Superscript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Superscript) Reset() {
	*x = Format_Superscript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Superscript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Superscript) ProtoMessage() {}

func (x *Format_Superscript) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Superscript.ProtoReflect.Descriptor instead.
func (*Format_Superscript) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 4}
}

// Subscript text
type Format_Subscript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Format_Subscript) Reset() {
	*x = Format_Subscript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Subscript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Subscript) ProtoMessage() {}

func (x *Format_Subscript) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Subscript.ProtoReflect.Descriptor instead.
func (*Format_Subscript) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 5}
}

// A larger codeblock, with a programming language specified
// Clients should ideally not bound the width of codeblock messages,
// possibly scrolling the codeblock horizontally separately from the
// rest of the message
type Format_CodeBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// programming language of the code block
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Format_CodeBlock) Reset() {
	*x = Format_CodeBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_CodeBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_CodeBlock) ProtoMessage() {}

func (x *Format_CodeBlock) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_CodeBlock.ProtoReflect.Descriptor instead.
func (*Format_CodeBlock) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 6}
}

func (x *Format_CodeBlock) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// Mention of a user (on the current homeserver)
type Format_UserMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id of the user being mentioned
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Format_UserMention) Reset() {
	*x = Format_UserMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_UserMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_UserMention) ProtoMessage() {}

func (x *Format_UserMention) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_UserMention.ProtoReflect.Descriptor instead.
func (*Format_UserMention) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 7}
}

func (x *Format_UserMention) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Mention of a role (on the current guild)
type Format_RoleMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the role being mentioned
	RoleId uint64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *Format_RoleMention) Reset() {
	*x = Format_RoleMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_RoleMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_RoleMention) ProtoMessage() {}

func (x *Format_RoleMention) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_RoleMention.ProtoReflect.Descriptor instead.
func (*Format_RoleMention) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 8}
}

func (x *Format_RoleMention) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// Mention of a channel (on the current guild)
type Format_ChannelMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the channel being mentioned
	ChannelId uint64 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *Format_ChannelMention) Reset() {
	*x = Format_ChannelMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_ChannelMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_ChannelMention) ProtoMessage() {}

func (x *Format_ChannelMention) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_ChannelMention.ProtoReflect.Descriptor instead.
func (*Format_ChannelMention) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 9}
}

func (x *Format_ChannelMention) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

// Mention of a guild
type Format_GuildMention struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the guild being mentioned
	GuildId uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	// which homeserver it belongs to
	Homeserver string `protobuf:"bytes,2,opt,name=homeserver,proto3" json:"homeserver,omitempty"`
}

func (x *Format_GuildMention) Reset() {
	*x = Format_GuildMention{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_GuildMention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_GuildMention) ProtoMessage() {}

func (x *Format_GuildMention) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_GuildMention.ProtoReflect.Descriptor instead.
func (*Format_GuildMention) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 10}
}

func (x *Format_GuildMention) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *Format_GuildMention) GetHomeserver() string {
	if x != nil {
		return x.Homeserver
	}
	return ""
}

// An emoji
type Format_Emoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The HMC URL of the emoji
	ImageHmc string `protobuf:"bytes,1,opt,name=image_hmc,json=imageHmc,proto3" json:"image_hmc,omitempty"`
	// The ID of the emoji pack the emoji is from
	PackId uint64 `protobuf:"varint,2,opt,name=pack_id,json=packId,proto3" json:"pack_id,omitempty"`
}

func (x *Format_Emoji) Reset() {
	*x = Format_Emoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Emoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Emoji) ProtoMessage() {}

func (x *Format_Emoji) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Emoji.ProtoReflect.Descriptor instead.
func (*Format_Emoji) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 11}
}

func (x *Format_Emoji) GetImageHmc() string {
	if x != nil {
		return x.ImageHmc
	}
	return ""
}

func (x *Format_Emoji) GetPackId() uint64 {
	if x != nil {
		return x.PackId
	}
	return 0
}

// Colour modification
type Format_Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The kind of colour modification to apply
	Kind Format_Color_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=protocol.harmonytypes.v1.Format_Color_Kind" json:"kind,omitempty"`
}

func (x *Format_Color) Reset() {
	*x = Format_Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format_Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format_Color) ProtoMessage() {}

func (x *Format_Color) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format_Color.ProtoReflect.Descriptor instead.
func (*Format_Color) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{4, 12}
}

func (x *Format_Color) GetKind() Format_Color_Kind {
	if x != nil {
		return x.Kind
	}
	return Format_Color_KIND_DIM_UNSPECIFIED
}

// An object that represents the top of an ordered list.
type ItemPosition_Top struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the next item.
	NextId uint64 `protobuf:"varint,1,opt,name=next_id,json=nextId,proto3" json:"next_id,omitempty"`
}

func (x *ItemPosition_Top) Reset() {
	*x = ItemPosition_Top{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPosition_Top) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPosition_Top) ProtoMessage() {}

func (x *ItemPosition_Top) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPosition_Top.ProtoReflect.Descriptor instead.
func (*ItemPosition_Top) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ItemPosition_Top) GetNextId() uint64 {
	if x != nil {
		return x.NextId
	}
	return 0
}

// An object that represents a place between two items in an ordered list.
type ItemPosition_Between struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the previous item.
	PreviousId uint64 `protobuf:"varint,1,opt,name=previous_id,json=previousId,proto3" json:"previous_id,omitempty"`
	// The ID of the next item.
	NextId uint64 `protobuf:"varint,2,opt,name=next_id,json=nextId,proto3" json:"next_id,omitempty"`
}

func (x *ItemPosition_Between) Reset() {
	*x = ItemPosition_Between{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPosition_Between) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPosition_Between) ProtoMessage() {}

func (x *ItemPosition_Between) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPosition_Between.ProtoReflect.Descriptor instead.
func (*ItemPosition_Between) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ItemPosition_Between) GetPreviousId() uint64 {
	if x != nil {
		return x.PreviousId
	}
	return 0
}

func (x *ItemPosition_Between) GetNextId() uint64 {
	if x != nil {
		return x.NextId
	}
	return 0
}

// An object that represents the bottom of an ordered list.
type ItemPosition_Bottom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the previous item.
	PreviousId uint64 `protobuf:"varint,1,opt,name=previous_id,json=previousId,proto3" json:"previous_id,omitempty"`
}

func (x *ItemPosition_Bottom) Reset() {
	*x = ItemPosition_Bottom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_harmonytypes_v1_types_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemPosition_Bottom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPosition_Bottom) ProtoMessage() {}

func (x *ItemPosition_Bottom) ProtoReflect() protoreflect.Message {
	mi := &file_harmonytypes_v1_types_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPosition_Bottom.ProtoReflect.Descriptor instead.
func (*ItemPosition_Bottom) Descriptor() ([]byte, []int) {
	return file_harmonytypes_v1_types_proto_rawDescGZIP(), []int{6, 2}
}

func (x *ItemPosition_Bottom) GetPreviousId() uint64 {
	if x != nil {
		return x.PreviousId
	}
	return 0
}

var file_harmonytypes_v1_types_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*HarmonyMethodMetadata)(nil),
		Field:         1091,
		Name:          "protocol.harmonytypes.v1.metadata",
		Tag:           "bytes,1091,opt,name=metadata",
		Filename:      "harmonytypes/v1/types.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// Harmony method metadata.
	//
	// optional protocol.harmonytypes.v1.HarmonyMethodMetadata metadata = 1091;
	E_Metadata = &file_harmonytypes_v1_types_proto_extTypes[0]
)

var File_harmonytypes_v1_types_proto protoreflect.FileDescriptor

var file_harmonytypes_v1_types_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x37,
	0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x38,
	0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x52, 0x0a, 0x0e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x75, 0x6d, 0x61, 0x6e,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x75, 0x6d, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x2d, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc,
	0x0c, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x04, 0x62, 0x6f, 0x6c, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x42, 0x6f, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x04,
	0x62, 0x6f, 0x6c, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x49, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x12, 0x4a, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x55, 0x6e, 0x64,
	0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x50, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x4a, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x48, 0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x4b, 0x0a,
	0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x51, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d,
	0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a,
	0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68,
	0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5a, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0d,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68,
	0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x1a, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x6c, 0x64, 0x1a, 0x08, 0x0a, 0x06, 0x49, 0x74,
	0x61, 0x6c, 0x69, 0x63, 0x1a, 0x0b, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x1a, 0x0b, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x0d,
	0x0a, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x0b, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x27, 0x0a, 0x09, 0x43, 0x6f,
	0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x1a, 0x26, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x26, 0x0a, 0x0b, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x1a, 0x2f, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x1a, 0x49, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a,
	0x3d, 0x0a, 0x05, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x68, 0x6d, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x48, 0x6d, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x1a, 0xc2,
	0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x78, 0x0a, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x14, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x44, 0x49, 0x4d, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x04, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x05, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x5d, 0x0a,
	0x0d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61,
	0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xff, 0x02, 0x0a,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x4a, 0x0a,
	0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x06, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x1a, 0x1e, 0x0a, 0x03, 0x54, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x1a, 0x43, 0x0a, 0x07, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0x29, 0x0a, 0x06, 0x42, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x6c,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc3, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0xf6, 0x01, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x61,
	0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x2d,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x48, 0x58, 0xaa, 0x02, 0x18, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5c, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x24, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x48, 0x61, 0x72,
	0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x3a, 0x3a, 0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_harmonytypes_v1_types_proto_rawDescOnce sync.Once
	file_harmonytypes_v1_types_proto_rawDescData = file_harmonytypes_v1_types_proto_rawDesc
)

func file_harmonytypes_v1_types_proto_rawDescGZIP() []byte {
	file_harmonytypes_v1_types_proto_rawDescOnce.Do(func() {
		file_harmonytypes_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_harmonytypes_v1_types_proto_rawDescData)
	})
	return file_harmonytypes_v1_types_proto_rawDescData
}

var file_harmonytypes_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_harmonytypes_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_harmonytypes_v1_types_proto_goTypes = []interface{}{
	(Format_Color_Kind)(0),             // 0: protocol.harmonytypes.v1.Format.Color.Kind
	(*HarmonyMethodMetadata)(nil),      // 1: protocol.harmonytypes.v1.HarmonyMethodMetadata
	(*Metadata)(nil),                   // 2: protocol.harmonytypes.v1.Metadata
	(*Error)(nil),                      // 3: protocol.harmonytypes.v1.Error
	(*Token)(nil),                      // 4: protocol.harmonytypes.v1.Token
	(*Format)(nil),                     // 5: protocol.harmonytypes.v1.Format
	(*FormattedText)(nil),              // 6: protocol.harmonytypes.v1.FormattedText
	(*ItemPosition)(nil),               // 7: protocol.harmonytypes.v1.ItemPosition
	nil,                                // 8: protocol.harmonytypes.v1.Metadata.ExtensionEntry
	(*Format_Bold)(nil),                // 9: protocol.harmonytypes.v1.Format.Bold
	(*Format_Italic)(nil),              // 10: protocol.harmonytypes.v1.Format.Italic
	(*Format_Underline)(nil),           // 11: protocol.harmonytypes.v1.Format.Underline
	(*Format_Monospace)(nil),           // 12: protocol.harmonytypes.v1.Format.Monospace
	(*Format_Superscript)(nil),         // 13: protocol.harmonytypes.v1.Format.Superscript
	(*Format_Subscript)(nil),           // 14: protocol.harmonytypes.v1.Format.Subscript
	(*Format_CodeBlock)(nil),           // 15: protocol.harmonytypes.v1.Format.CodeBlock
	(*Format_UserMention)(nil),         // 16: protocol.harmonytypes.v1.Format.UserMention
	(*Format_RoleMention)(nil),         // 17: protocol.harmonytypes.v1.Format.RoleMention
	(*Format_ChannelMention)(nil),      // 18: protocol.harmonytypes.v1.Format.ChannelMention
	(*Format_GuildMention)(nil),        // 19: protocol.harmonytypes.v1.Format.GuildMention
	(*Format_Emoji)(nil),               // 20: protocol.harmonytypes.v1.Format.Emoji
	(*Format_Color)(nil),               // 21: protocol.harmonytypes.v1.Format.Color
	(*ItemPosition_Top)(nil),           // 22: protocol.harmonytypes.v1.ItemPosition.Top
	(*ItemPosition_Between)(nil),       // 23: protocol.harmonytypes.v1.ItemPosition.Between
	(*ItemPosition_Bottom)(nil),        // 24: protocol.harmonytypes.v1.ItemPosition.Bottom
	(*anypb.Any)(nil),                  // 25: google.protobuf.Any
	(*descriptorpb.MethodOptions)(nil), // 26: google.protobuf.MethodOptions
}
var file_harmonytypes_v1_types_proto_depIdxs = []int32{
	8,  // 0: protocol.harmonytypes.v1.Metadata.extension:type_name -> protocol.harmonytypes.v1.Metadata.ExtensionEntry
	9,  // 1: protocol.harmonytypes.v1.Format.bold:type_name -> protocol.harmonytypes.v1.Format.Bold
	10, // 2: protocol.harmonytypes.v1.Format.italic:type_name -> protocol.harmonytypes.v1.Format.Italic
	11, // 3: protocol.harmonytypes.v1.Format.underline:type_name -> protocol.harmonytypes.v1.Format.Underline
	12, // 4: protocol.harmonytypes.v1.Format.monospace:type_name -> protocol.harmonytypes.v1.Format.Monospace
	13, // 5: protocol.harmonytypes.v1.Format.superscript:type_name -> protocol.harmonytypes.v1.Format.Superscript
	14, // 6: protocol.harmonytypes.v1.Format.subscript:type_name -> protocol.harmonytypes.v1.Format.Subscript
	15, // 7: protocol.harmonytypes.v1.Format.code_block:type_name -> protocol.harmonytypes.v1.Format.CodeBlock
	16, // 8: protocol.harmonytypes.v1.Format.user_mention:type_name -> protocol.harmonytypes.v1.Format.UserMention
	17, // 9: protocol.harmonytypes.v1.Format.role_mention:type_name -> protocol.harmonytypes.v1.Format.RoleMention
	18, // 10: protocol.harmonytypes.v1.Format.channel_mention:type_name -> protocol.harmonytypes.v1.Format.ChannelMention
	19, // 11: protocol.harmonytypes.v1.Format.guild_mention:type_name -> protocol.harmonytypes.v1.Format.GuildMention
	20, // 12: protocol.harmonytypes.v1.Format.emoji:type_name -> protocol.harmonytypes.v1.Format.Emoji
	21, // 13: protocol.harmonytypes.v1.Format.color:type_name -> protocol.harmonytypes.v1.Format.Color
	5,  // 14: protocol.harmonytypes.v1.FormattedText.format:type_name -> protocol.harmonytypes.v1.Format
	22, // 15: protocol.harmonytypes.v1.ItemPosition.top:type_name -> protocol.harmonytypes.v1.ItemPosition.Top
	23, // 16: protocol.harmonytypes.v1.ItemPosition.between:type_name -> protocol.harmonytypes.v1.ItemPosition.Between
	24, // 17: protocol.harmonytypes.v1.ItemPosition.bottom:type_name -> protocol.harmonytypes.v1.ItemPosition.Bottom
	25, // 18: protocol.harmonytypes.v1.Metadata.ExtensionEntry.value:type_name -> google.protobuf.Any
	0,  // 19: protocol.harmonytypes.v1.Format.Color.kind:type_name -> protocol.harmonytypes.v1.Format.Color.Kind
	26, // 20: protocol.harmonytypes.v1.metadata:extendee -> google.protobuf.MethodOptions
	1,  // 21: protocol.harmonytypes.v1.metadata:type_name -> protocol.harmonytypes.v1.HarmonyMethodMetadata
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	21, // [21:22] is the sub-list for extension type_name
	20, // [20:21] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_harmonytypes_v1_types_proto_init() }
func file_harmonytypes_v1_types_proto_init() {
	if File_harmonytypes_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_harmonytypes_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarmonyMethodMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormattedText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Bold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Italic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Underline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Monospace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Superscript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Subscript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_CodeBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_UserMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_RoleMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_ChannelMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_GuildMention); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Emoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format_Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPosition_Top); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPosition_Between); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_harmonytypes_v1_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemPosition_Bottom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_harmonytypes_v1_types_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Format_Bold_)(nil),
		(*Format_Italic_)(nil),
		(*Format_Underline_)(nil),
		(*Format_Monospace_)(nil),
		(*Format_Superscript_)(nil),
		(*Format_Subscript_)(nil),
		(*Format_CodeBlock_)(nil),
		(*Format_UserMention_)(nil),
		(*Format_RoleMention_)(nil),
		(*Format_ChannelMention_)(nil),
		(*Format_GuildMention_)(nil),
		(*Format_Emoji_)(nil),
		(*Format_Color_)(nil),
	}
	file_harmonytypes_v1_types_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ItemPosition_Top_)(nil),
		(*ItemPosition_Between_)(nil),
		(*ItemPosition_Bottom_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_harmonytypes_v1_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_harmonytypes_v1_types_proto_goTypes,
		DependencyIndexes: file_harmonytypes_v1_types_proto_depIdxs,
		EnumInfos:         file_harmonytypes_v1_types_proto_enumTypes,
		MessageInfos:      file_harmonytypes_v1_types_proto_msgTypes,
		ExtensionInfos:    file_harmonytypes_v1_types_proto_extTypes,
	}.Build()
	File_harmonytypes_v1_types_proto = out.File
	file_harmonytypes_v1_types_proto_rawDesc = nil
	file_harmonytypes_v1_types_proto_goTypes = nil
	file_harmonytypes_v1_types_proto_depIdxs = nil
}
