// Code generated by protoc-gen-go-hrpc. DO NOT EDIT.

package syncv1

import (
	context "context"
	errors "errors"
	server "github.com/harmony-development/hrpc/server"
	proto "google.golang.org/protobuf/proto"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type PostboxServiceServer interface {
	Pull(context.Context, *emptypb.Empty) (*EventQueue, error)
	Push(context.Context, *Event) (*emptypb.Empty, error)
}

type DefaultPostboxService struct{}

func (DefaultPostboxService) Pull(context.Context, *emptypb.Empty) (*EventQueue, error) {
	return nil, errors.New("unimplemented")
}
func (DefaultPostboxService) Push(context.Context, *Event) (*emptypb.Empty, error) {
	return nil, errors.New("unimplemented")
}

type PostboxServiceHandler struct {
	Server PostboxServiceServer
}

func NewPostboxServiceHandler(server PostboxServiceServer) *PostboxServiceHandler {
	return &PostboxServiceHandler{Server: server}
}
func (h *PostboxServiceHandler) Name() string {
	return "PostboxService"
}
func (h *PostboxServiceHandler) Routes() map[string]server.RawHandler {
	return map[string]server.RawHandler{
		"/protocol.sync.v1.PostboxService.Pull/": server.NewUnaryHandler(&emptypb.Empty{}, func(c context.Context, req proto.Message) (proto.Message, error) {
			return h.Server.Pull(c, req.(*emptypb.Empty))
		}),
		"/protocol.sync.v1.PostboxService.Push/": server.NewUnaryHandler(&Event{}, func(c context.Context, req proto.Message) (proto.Message, error) {
			return h.Server.Push(c, req.(*Event))
		}),
	}
}
